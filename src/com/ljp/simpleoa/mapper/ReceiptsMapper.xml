<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljp.simpleoa.mapper.ReceiptsMapper">
  <resultMap id="BaseResultMap" type="com.ljp.simpleoa.model.Receipts">
    <id column="receipts_id" jdbcType="INTEGER" property="receiptsId" />
    <result column="creater_id" jdbcType="INTEGER" property="createrId" />
    <result column="next_deal_id" jdbcType="INTEGER" property="nextDealId" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="cause" jdbcType="VARCHAR" property="cause" />
    <result column="totalmoney" jdbcType="DECIMAL" property="totalmoney" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="worker_name" jdbcType="VARCHAR" property="creater.workerName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    receipts_id, creater_id, next_deal_id, creat_time, cause, totalmoney, state
  </sql>
  <select id="selectByExample" parameterType="com.ljp.simpleoa.model.ReceiptsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receipts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
    <select id="selectByExampleAndLeftJoinWorker" parameterType="com.ljp.simpleoa.model.ReceiptsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,worker.worker_name
    from receipts left join worker 
    on (worker_id = creater_id)
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from receipts
    where receipts_id = #{receiptsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from receipts
    where receipts_id = #{receiptsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ljp.simpleoa.model.ReceiptsExample">
    delete from receipts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ljp.simpleoa.model.Receipts" useGeneratedKeys="true" keyProperty="receiptsId">
    insert into receipts (receipts_id, creater_id, next_deal_id, 
      creat_time, cause, totalmoney, 
      state)
    values (#{receiptsId,jdbcType=INTEGER}, #{createrId,jdbcType=INTEGER}, #{nextDealId,jdbcType=INTEGER}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{cause,jdbcType=VARCHAR}, #{totalmoney,jdbcType=DECIMAL}, 
      #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ljp.simpleoa.model.Receipts" useGeneratedKeys="true" keyProperty="receiptsId">
    insert into receipts
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receiptsId != null">
        receipts_id,
      </if>
      <if test="createrId != null">
        creater_id,
      </if>
      <if test="nextDealId != null">
        next_deal_id,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="cause != null">
        cause,
      </if>
      <if test="totalmoney != null">
        totalmoney,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receiptsId != null">
        #{receiptsId,jdbcType=INTEGER},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=INTEGER},
      </if>
      <if test="nextDealId != null">
        #{nextDealId,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cause != null">
        #{cause,jdbcType=VARCHAR},
      </if>
      <if test="totalmoney != null">
        #{totalmoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ljp.simpleoa.model.ReceiptsExample" resultType="java.lang.Long">
    select count(*) from receipts
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update receipts
    <set>
      <if test="record.receiptsId != null">
        receipts_id = #{record.receiptsId,jdbcType=INTEGER},
      </if>
      <if test="record.createrId != null">
        creater_id = #{record.createrId,jdbcType=INTEGER},
      </if>
      <if test="record.nextDealId != null">
        next_deal_id = #{record.nextDealId,jdbcType=INTEGER},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cause != null">
        cause = #{record.cause,jdbcType=VARCHAR},
      </if>
      <if test="record.totalmoney != null">
        totalmoney = #{record.totalmoney,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update receipts
    set receipts_id = #{record.receiptsId,jdbcType=INTEGER},
      creater_id = #{record.createrId,jdbcType=INTEGER},
      next_deal_id = #{record.nextDealId,jdbcType=INTEGER},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      cause = #{record.cause,jdbcType=VARCHAR},
      totalmoney = #{record.totalmoney,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ljp.simpleoa.model.Receipts">
    update receipts
    <set>
      <if test="createrId != null">
        creater_id = #{createrId,jdbcType=INTEGER},
      </if>
      <if test="nextDealId != null">
        next_deal_id = #{nextDealId,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cause != null">
        cause = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="totalmoney != null">
        totalmoney = #{totalmoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where receipts_id = #{receiptsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ljp.simpleoa.model.Receipts">
    update receipts
    set creater_id = #{createrId,jdbcType=INTEGER},
      next_deal_id = #{nextDealId,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      cause = #{cause,jdbcType=VARCHAR},
      totalmoney = #{totalmoney,jdbcType=DECIMAL},
      state = #{state,jdbcType=VARCHAR}
    where receipts_id = #{receiptsId,jdbcType=INTEGER}
  </update>
</mapper>